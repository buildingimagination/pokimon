// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Level2":
            case "level5":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
2 2 2 2 2 . . . . . . . . 2 2 . 
. . . . . . 2 2 2 2 2 2 2 2 2 . 
2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 . 
. . . 2 . . . . . . . . . . 2 . 
2 2 . 2 2 2 2 2 . . . 2 2 . 2 . 
2 2 2 2 2 2 2 . . 2 2 . 2 2 2 . 
2 . . . . . . . . . 2 . . 2 2 . 
2 2 . 2 2 2 2 2 2 . 2 . 2 2 2 . 
. 2 2 2 . 2 . . . . 2 . 2 2 2 . 
2 . 2 . 2 2 . . 2 . 2 . 2 2 2 . 
2 . 2 . 2 2 . . . . . . 2 2 2 . 
2 . . . 2 2 2 2 . 2 2 2 2 2 2 . 
2 2 2 2 2 2 2 2 . 2 2 2 2 2 2 . 
2 2 2 2 2 . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles10,sprites.builtin.forestTiles16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`100010000607070707070707070707070707070501060707070707070707070707050504010100000000000000000000080d04040101000000000000000000000800040401010000000000000000000008000404010108080808080808080a0008000404010100000000000000000000080004040101000000000000000000000800040401010808080a0000090808080a00040401010000000000000000000008000404010100000000000000000000080004040101090808080808080b08080a0004040101000000000000000b00000800040401010a0000000000000000000c00040401030303030303030303030303030e040201030303030303030303030303030a`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 . . . . . . . . . . 2 . 2 2 
2 2 . . . . . . . . . . 2 . 2 2 
2 2 . . . . . . . . . . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 . 2 . 2 2 
2 2 . . . . . . . . . . 2 . 2 2 
2 2 . . . . . . . . . . 2 . 2 2 
2 2 2 2 2 2 . . 2 2 2 2 2 . 2 2 
2 2 . . . . . . . . . . 2 . 2 2 
2 2 . . . . . . . . . . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 
2 2 . . . . . . . 2 . . 2 . 2 2 
2 2 2 . . . . . . . . . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles9,sprites.builtin.forestTiles13,sprites.builtin.forestTiles14,sprites.builtin.forestTiles11,sprites.builtin.forestTiles7,sprites.builtin.forestTiles5,sprites.builtin.forestTiles6,sprites.castle.tilePath5,sprites.castle.tilePath4,sprites.castle.tilePath6,sprites.castle.tilePath2,sprites.castle.tilePath8,sprites.castle.tileDarkGrass3,sprites.builtin.forestTiles15], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
